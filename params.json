{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Scala-skunkworks","body":"# Scala\r\nThese notes assume that the basic of programming are known are hence fast paced, it has the code linked to the same repository all the codes from basics are written in full.\r\n\r\n\r\n\r\n## What is Scala?\r\n\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\n## sbt - simple build tool\r\n\r\nIts a build written in scala provides major conveniences of Scala. It provides a full language support for creating tasks. Launches REPL in project context and had a continuous command execution. Other advantages are\r\n* Generated docs by scaladoc\r\n* Supports mixed Scala/Java projects\r\n* Supports Testing with ScalaCheck, specs, and ScalaTest (JUnit is supported by a plugin)\r\n* Sub-project support (put multiple packages in one project)\r\n* External project support (list a git repository as a dependency!)\r\n* Parallel task execution, including parallel test execution\r\n* \r\n\r\n### Getting Started\r\n\r\nIt is now bundled with a lot of operating systems some of their commands are\r\n```\r\nyum install sbt\r\n\r\napt-get install sbt\r\n* in few cases this might be needed to be added http://apt.typesafe.com/repo-deb-build-0002.deb\r\n\r\nsudo port install sbt\r\n\r\nbrew install sbt\r\n```\r\nFor windows the MSI is given at \r\n```\r\nhttp://scalasbt.artifactoryonline.com/scalasbt/sbt-native-packages/org/scala-sbt/sbt/0.12.0/sbt.msi\r\n```\r\nOR Manually:\r\nDownload the sbt jar from \r\n```\r\nhttp://typesafe.artifactoryonline.com/typesafe/ivy-releases/org.scala-sbt/sbt-launch/0.12.0/sbt-launch.jar\r\n```\r\nand put it in the ~/bin directory of the project, write a script to run the jar \r\n```\r\njava -Xms512M -Xmx1536M -Xss1M -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=384M -jar `dirname $0`/sbt-launch.jar \"$@\"\r\n```\r\nMake the script Executable\r\n```\r\nchmod u+x ~/bin/sbt\r\n```\r\n\r\n### Creating a Sample Project\r\n\r\nLets create a Simple hello world scala code as\r\n```\r\nobject Hi {\r\n  def main(args: Array[String]) = println(\"Hi!\")\r\n}\r\n```\r\n\r\nand a build.sbt file as\r\n\r\n```\r\n\r\nname := \"hello\"\r\n\r\nversion := \"1.0\"\r\n\r\nscalaVersion := \"2.9.1\"\r\n\r\n```\r\nand running as would run the code \r\n\r\n```\r\nsbt run\r\n\r\n```\r\nSome commands with sbt are:\r\n\r\n\r\n* clean Deletes all generated files (in the target directory).\r\n* compile Compiles the main sources (in src/main/scala and src/main/java directories).\r\n* test Compiles and runs all tests.\r\n* console Starts the Scala interpreter with a classpath including the compiled sources and all dependencies. To return to sbt, type :quit, Ctrl+D (Unix), or Ctrl+Z (Windows).\r\n* run <argument>* Runs the main class for the project in the same virtual machine as sbt.\r\n* package Creates a jar file containing the files in src/main/resources and the classes compiled from src/main/scala and src/main/java.\r\n* help <command> Displays detailed help for the specified command. If no command is provided, displays brief descriptions of all commands.\r\n* reload Reloads the build definition (build.sbt, project/*.scala, project/*.sbt files). Needed if you change the build definition.\r\n\r\n### Understanding sbt\r\n\r\n\r\n\r\n\r\n### Authors and Contributors\r\nIn 2012, Vidyasagar N (@vidyasagar1729)\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? contact me at vidyasagar1729@gmail.com and I'll get back to you as soon as possible.","google":"","tagline":"Some Scala Learning"}